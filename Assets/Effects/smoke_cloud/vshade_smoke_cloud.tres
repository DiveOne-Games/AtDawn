[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://domakw4ft1st4"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_7ssju"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0.25, 0.7, 0.25)]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ga8id"]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// UVFunc:3
	vec2 n_in3p1 = vec2(1.00000, 1.00000);
	vec2 n_in3p2 = vec2(0.00000, 0.00000);
	vec2 n_out3p0 = n_in3p2 * n_in3p1 + UV;


// Output:0
	COLOR.a = n_out3p0.x;


}

void fragment() {
	vec3 n_out2p0;
// ColorFunc:2
	vec3 n_in2p0 = vec3(0.25000, 0.70000, 0.25000);
	{
		vec3 c = n_in2p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out2p0 = vec3(max2, max2, max2);
	}


// Output:0
	COLOR.rgb = n_out2p0;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(1260, 160)
nodes/vertex/3/node = SubResource("VisualShaderNodeUVFunc_ga8id")
nodes/vertex/3/position = Vector2(620, 140)
nodes/vertex/connections = PackedInt32Array(3, 0, 0, 3)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorFunc_7ssju")
nodes/fragment/2/position = Vector2(-420, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
